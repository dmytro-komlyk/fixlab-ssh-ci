name: CI/CD Pipeline # The name of the workflow

on:
  pull_request:
    branches:
      - "*"
  push:
    branches-ignore:
      - "main"
    branches:
      - "*"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-deploy:
    name: "Build & Publish"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: "Build&Deploy Server"
        uses: docker/build-push-action@v4
        with:
          context: ./server
          target: production
          secrets: |
            MONGO_DB_AUTH_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
            MONGO_DB_AUTH_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
            SECRET=${{ secrets.SECRET }}
            D_ADMIN_KEY=${{ secrets.D_ADMIN_KEY }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/prod-fixlab-server:latest

      - name: "Build&Deploy Admin"
        uses: docker/build-push-action@v4
        with:
          context: ./admin
          target: production
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/prod-fixlab-admin:latest

      - name: "Run deploy on SSH"
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd fix-lab
            echo ${{ secrets.REGISTRY_TOKEN  }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            docker compose -f docker-compose.prod-ci.yml -p fix-lab-prod down --rmi all
            docker compose -f docker-compose.prod-ci.yml -p fix-lab-prod pull
            docker compose -f docker-compose.prod-ci.yml -p fix-lab-prod up -d
